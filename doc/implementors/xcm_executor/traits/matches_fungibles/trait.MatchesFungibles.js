(function() {var implementors = {};
implementors["xcm_builder"] = [{"text":"impl&lt;AssetId:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, Balance:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, ConvertAssetId:&nbsp;Convert&lt;<a class=\"struct\" href=\"xcm_builder/test_utils/struct.MultiLocation.html\" title=\"struct xcm_builder::test_utils::MultiLocation\">MultiLocation</a>, AssetId&gt;, ConvertBalance:&nbsp;Convert&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>, Balance&gt;&gt; MatchesFungibles&lt;AssetId, Balance&gt; for <a class=\"struct\" href=\"xcm_builder/struct.ConvertedConcreteAssetId.html\" title=\"struct xcm_builder::ConvertedConcreteAssetId\">ConvertedConcreteAssetId</a>&lt;AssetId, Balance, ConvertAssetId, ConvertBalance&gt;","synthetic":false,"types":["xcm_builder::fungibles_adapter::ConvertedConcreteAssetId"]},{"text":"impl&lt;AssetId:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, Balance:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, ConvertAssetId:&nbsp;Convert&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;, AssetId&gt;, ConvertBalance:&nbsp;Convert&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>, Balance&gt;&gt; MatchesFungibles&lt;AssetId, Balance&gt; for <a class=\"struct\" href=\"xcm_builder/struct.ConvertedAbstractAssetId.html\" title=\"struct xcm_builder::ConvertedAbstractAssetId\">ConvertedAbstractAssetId</a>&lt;AssetId, Balance, ConvertAssetId, ConvertBalance&gt;","synthetic":false,"types":["xcm_builder::fungibles_adapter::ConvertedAbstractAssetId"]}];
implementors["xcm_executor"] = [];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()